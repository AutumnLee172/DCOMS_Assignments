/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import RMI_Structures.Customer;
import RMI_Structures.Order;
import RMI_Structures.RMIinterface;
import java.awt.Dimension;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Boey
 */
public class CheckOut extends javax.swing.JFrame {
 Customer LoggedCustomer;
 CartMenu PreviousCartMenu;
 ArrayList<String> items = new ArrayList<String>();
 double checkOutPrice;
 DefaultTableModel model;
 RMIinterface Obj;
    /**
     * Creates new form CheckOut
     */
    public CheckOut() {
        initComponents();
    }
    
    public CheckOut(Customer cm,CartMenu cartMenu, ArrayList<String> items) {
     try {
         Obj = (RMIinterface) Naming.lookup("rmi://localhost:1040/KGF");
     } catch (NotBoundException | MalformedURLException | RemoteException ex) {
         Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
     }
        
        this.LoggedCustomer = cm;
        this.PreviousCartMenu = cartMenu;
        this.items = items;
        
        initComponents();
        
        lblFullName.setText(LoggedCustomer.getName());
        model = (DefaultTableModel) tableCheckOut.getModel();
     try {
         printOutItems();
     } catch (RemoteException ex) {
         Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
     }
        tableCheckOut.getTableHeader().setUI(null);
        tableCheckOut.setShowGrid(false);
        tableCheckOut.setIntercellSpacing(new Dimension(0, 0));
    }
    
    public final void printOutItems() throws RemoteException{
        Object header[] = {"Your cart items:","",null};
        Object header2[] = {"- - - - - - - - - - - -","",null};
        model.addRow(header);
        model.addRow(header2);
        Double total = 0.0;
        
        for(int i = 0; i< items.size(); i++){
            i++;//skipping first index in every "3 string window" because it is cartID
            String productID = items.get(i);
            i++;            
            int quantity = Integer.parseInt(items.get(i));
            double price = Obj.findProductPrice(productID)*quantity;
            
            Object rowData[] = {Obj.findProductName(productID),
                                quantity,
                                price};
            total += price;
            model.addRow(rowData);
        }
        
        model.addRow(header2);
        Object lastLine[] = {"Total cost:","",total};
        model.addRow(lastLine);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPayment = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        comboCountryCode = new javax.swing.JComboBox<>();
        lblContact = new javax.swing.JLabel();
        txtContactNumber = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextArea();
        lblAddress = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblFullName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCheckOut = new javax.swing.JTable();
        lblPaymentMethod = new javax.swing.JLabel();
        comboPaymentMethod = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnPayment.setText("Proceed Payment");
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        comboCountryCode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(MY) +60", "(ID) +62", "(PH) +63", "(SG) +65", "(TH) +66" }));

        lblContact.setText("Contact Number :");

        txtContactNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactNumberKeyTyped(evt);
            }
        });

        txtAddress.setColumns(20);
        txtAddress.setRows(5);

        lblAddress.setText("Address               :");

        lblName.setText("Your Name         :");

        lblFullName.setText("Customer's Name");

        tableCheckOut.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableCheckOut.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCheckOut.setFocusable(false);
        tableCheckOut.setGridColor(new java.awt.Color(204, 204, 204));
        tableCheckOut.setRowHeight(25);
        tableCheckOut.setRowSelectionAllowed(false);
        tableCheckOut.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tableCheckOut);
        if (tableCheckOut.getColumnModel().getColumnCount() > 0) {
            tableCheckOut.getColumnModel().getColumn(0).setResizable(false);
            tableCheckOut.getColumnModel().getColumn(0).setPreferredWidth(250);
            tableCheckOut.getColumnModel().getColumn(1).setResizable(false);
            tableCheckOut.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableCheckOut.getColumnModel().getColumn(2).setResizable(false);
        }

        lblPaymentMethod.setText("Payment Method:");

        comboPaymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Credit Card/Debit Card", "Maybank", "Public Bank", "Touch N' Go", "GrabPay Wallet" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblFullName))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPayment))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddress)
                            .addComponent(lblContact))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboCountryCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(txtContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPaymentMethod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboPaymentMethod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(lblFullName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboCountryCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblContact))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPaymentMethod)
                            .addComponent(comboPaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPayment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(9, 9, 9))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
           PreviousCartMenu.setVisible(true);
           this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtContactNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactNumberKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtContactNumberKeyTyped

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        if(txtAddress.getText().isEmpty() || txtContactNumber.getText().isEmpty()){
        JOptionPane.showMessageDialog(this,"Address or contact number is/are empty.");
        }
        else
        {
            int input = JOptionPane.showConfirmDialog(this,
                "Proceed to payment?", "Payment confirmation ",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (input == JOptionPane.OK_OPTION) {
            //Get today date with format
             DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");  
                LocalDateTime now = LocalDateTime.now(); 
                String today = dtf.format(now);
            
                String PM = comboPaymentMethod.getSelectedItem().toString();
                String countrycode = comboCountryCode.getSelectedItem().toString().replaceAll("\\D+","");
                String contactNum = countrycode + txtContactNumber.getText();
                int lastRow = model.getRowCount() - 1;
                
                Order newOrder = new Order(
                        null,
                        LoggedCustomer.getID(),
                        today,
                        txtAddress.getText(),
                        contactNum,
                        PM,
                        "Paid",//Paid > Shipping > Delivery > Complete
                        (Double)model.getValueAt(lastRow,2));
                
                try {
                    Obj.createOrder(newOrder,items);
                } catch (RemoteException ex) {
                    Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
                }
                
        }
        }
    }//GEN-LAST:event_btnPaymentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPayment;
    private javax.swing.JComboBox<String> comboCountryCode;
    private javax.swing.JComboBox<String> comboPaymentMethod;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPaymentMethod;
    private javax.swing.JTable tableCheckOut;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtContactNumber;
    // End of variables declaration//GEN-END:variables
}
