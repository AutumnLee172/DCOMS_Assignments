/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import RMI_Structures.Cart;
import RMI_Structures.Customer;
import RMI_Structures.RMIinterface;
import java.awt.List;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class CartMenu extends javax.swing.JFrame{
  Customer LoggedCustomer;
    /**
     * Creates new form Cart
     */
  
  //public CartMenu() {
   //     initComponents();
   // }
  
    public CartMenu() {
       /* this.LoggedCustomer = cm;
        
        lblCartTitle.setText(LoggedCustomer.getName() + "'s Cart ");
        
     */   //load all cart info into table
     initComponents();
        try {
        RMIinterface Obj = (RMIinterface)Naming.lookup("rmi://localhost:1040/KGF");
      List<Cart> cartlist = Obj.getCustomerCart("C1");
      jLabel1.setText(String.valueOf(cartlist.size()));
                         
               String ProductName;
               double ProductPrice,totalPrice;
               int quantity = 0;
               boolean select = false;
               
               
           for(int i=0; i< 2; i++){
               //i looping is the total car items to be printed

                ProductName = Obj.findProductName(cartlist.get(i).getProductID());
                System.out.println(cartlist.get(0).getCartID());
                System.out.println(cartlist.get(1).getCartID());
                ProductPrice = Obj.findProductPrice(cartlist.get(i).getProductID());
                quantity = cartlist.get(i).getQuantity();
                totalPrice = quantity*ProductPrice;
                               
                Object rowData[] = {ProductName,quantity,totalPrice,select};
                
                DefaultTableModel model = (DefaultTableModel)TableCartList.getModel();
                model.addRow(rowData);
               
           }
          
      } catch (RemoteException | NotBoundException | MalformedURLException ex) {
          Logger.getLogger(CartMenu.class.getName()).log(Level.SEVERE, null, ex);
      }
      
      
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCartTitle = new javax.swing.JLabel();
        AddCartTest = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableCartList = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCartTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblCartTitle.setText("Customer Name's Cart");

        AddCartTest.setText("AddCartTest");
        AddCartTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCartTestActionPerformed(evt);
            }
        });

        TableCartList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Total Cost", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableCartList.setAutoscrolls(false);
        TableCartList.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TableCartList);
        if (TableCartList.getColumnModel().getColumnCount() > 0) {
            TableCartList.getColumnModel().getColumn(0).setPreferredWidth(250);
            TableCartList.getColumnModel().getColumn(1).setPreferredWidth(10);
            TableCartList.getColumnModel().getColumn(2).setPreferredWidth(10);
            TableCartList.getColumnModel().getColumn(3).setPreferredWidth(50);
            TableCartList.getColumnModel().getColumn(3).setMaxWidth(50);
        }

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCartTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(AddCartTest))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblCartTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(AddCartTest)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddCartTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCartTestActionPerformed
        String CustomerID = LoggedCustomer.getID();
      try {
          RMIinterface Obj = (RMIinterface)Naming.lookup("rmi://localhost:1040/KGF");
          Obj.addToCart(CustomerID,"P1",1);
      
      } catch (NotBoundException | MalformedURLException | RemoteException ex) {
          Logger.getLogger(CartMenu.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_AddCartTestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CartMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CartMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCartTest;
    private javax.swing.JTable TableCartList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCartTitle;
    // End of variables declaration//GEN-END:variables
}
